{"id":"node_modules/react-paypal-button-v2/lib/index.js","dependencies":[{"name":"C:\\Users\\Ademola\\apps\\book-club\\client\\package.json","includedInParent":true,"mtime":1600904376897},{"name":"C:\\Users\\Ademola\\apps\\book-club\\client\\node_modules\\react-paypal-button-v2\\package.json","includedInParent":true,"mtime":1598545466377},{"name":"react","loc":{"line":8,"column":44},"parent":"C:\\Users\\Ademola\\apps\\book-club\\client\\node_modules\\react-paypal-button-v2\\lib\\index.js","resolved":"C:\\Users\\Ademola\\node_modules\\react\\index.js"},{"name":"react-dom","loc":{"line":10,"column":47},"parent":"C:\\Users\\Ademola\\apps\\book-club\\client\\node_modules\\react-paypal-button-v2\\lib\\index.js","resolved":"C:\\Users\\Ademola\\node_modules\\react-dom\\index.js"},{"name":"prop-types","loc":{"line":12,"column":48},"parent":"C:\\Users\\Ademola\\apps\\book-club\\client\\node_modules\\react-paypal-button-v2\\lib\\index.js","resolved":"C:\\Users\\Ademola\\apps\\book-club\\client\\node_modules\\prop-types\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayPalButton = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PayPalButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PayPalButton, _React$Component);\n\n  function PayPalButton(props) {\n    var _this;\n\n    _classCallCheck(this, PayPalButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayPalButton).call(this, props));\n    _this.state = {\n      isSdkReady: false\n    };\n    return _this;\n  }\n\n  _createClass(PayPalButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof window !== \"undefined\" && window !== undefined && window.paypal === undefined) {\n        this.addPaypalSdk();\n      } else if (typeof window !== \"undefined\" && window !== undefined && window.paypal !== undefined && this.props.onButtonReady) {\n        this.props.onButtonReady();\n      }\n    }\n  }, {\n    key: \"createOrder\",\n    value: function createOrder(data, actions) {\n      var _this$props = this.props,\n          currency = _this$props.currency,\n          options = _this$props.options,\n          amount = _this$props.amount,\n          shippingPreference = _this$props.shippingPreference;\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            currency_code: currency ? currency : options && options.currency ? options.currency : \"USD\",\n            value: amount.toString()\n          }\n        }],\n        application_context: {\n          shipping_preference: shippingPreference\n        }\n      });\n    }\n  }, {\n    key: \"onApprove\",\n    value: function onApprove(data, actions) {\n      var _this2 = this;\n\n      return actions.order.capture().then(function (details) {\n        if (_this2.props.onSuccess) {\n          return _this2.props.onSuccess(details, data);\n        }\n      })[\"catch\"](function (err) {\n        if (_this2.props.catchError) {\n          return _this2.props.catchError(err);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          amount = _this$props2.amount,\n          onSuccess = _this$props2.onSuccess,\n          createOrder = _this$props2.createOrder,\n          createSubscription = _this$props2.createSubscription,\n          onApprove = _this$props2.onApprove,\n          style = _this$props2.style;\n      var isSdkReady = this.state.isSdkReady;\n\n      if (!isSdkReady && (typeof window === \"undefined\" || window.paypal === undefined)) {\n        return null;\n      }\n\n      var Button = window.paypal.Buttons.driver(\"react\", {\n        React: _react[\"default\"],\n        ReactDOM: _reactDom[\"default\"]\n      });\n      var createOrderFn = amount && !createOrder ? function (data, actions) {\n        return _this3.createOrder(data, actions);\n      } : function (data, actions) {\n        return createOrder(data, actions);\n      };\n      return _react[\"default\"].createElement(Button, _extends({}, this.props, {\n        createOrder: createSubscription ? undefined : createOrderFn,\n        createSubscription: createSubscription,\n        onApprove: onSuccess ? function (data, actions) {\n          return _this3.onApprove(data, actions);\n        } : function (data, actions) {\n          return onApprove(data, actions);\n        },\n        style: style\n      }));\n    }\n  }, {\n    key: \"addPaypalSdk\",\n    value: function addPaypalSdk() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          options = _this$props3.options,\n          onButtonReady = _this$props3.onButtonReady;\n      var queryParams = []; // replacing camelCase with dashes\n\n      Object.keys(options).forEach(function (k) {\n        var name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n        queryParams.push(\"\".concat(name, \"=\").concat(options[k]));\n      });\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = \"https://www.paypal.com/sdk/js?\".concat(queryParams.join(\"&\"));\n      script.async = true;\n\n      script.onload = function () {\n        _this4.setState({\n          isSdkReady: true\n        });\n\n        if (onButtonReady) {\n          onButtonReady();\n        }\n      };\n\n      script.onerror = function () {\n        throw new Error(\"Paypal SDK could not be loaded.\");\n      };\n\n      document.body.appendChild(script);\n    }\n  }]);\n\n  return PayPalButton;\n}(_react[\"default\"].Component);\n\nexports.PayPalButton = PayPalButton;\n\n_defineProperty(PayPalButton, \"propTypes\", {\n  amount: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  shippingPreference: _propTypes[\"default\"].string,\n  onSuccess: _propTypes[\"default\"].func,\n  catchError: _propTypes[\"default\"].func,\n  onError: _propTypes[\"default\"].func,\n  createOrder: _propTypes[\"default\"].func,\n  createSubscription: _propTypes[\"default\"].func,\n  onApprove: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object,\n  options: _propTypes[\"default\"].shape({\n    clientId: _propTypes[\"default\"].string,\n    merchantId: _propTypes[\"default\"].string,\n    currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n    intent: _propTypes[\"default\"].string,\n    commit: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    vault: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    component: _propTypes[\"default\"].string,\n    disableFunding: _propTypes[\"default\"].string,\n    disableCard: _propTypes[\"default\"].string,\n    integrationDate: _propTypes[\"default\"].string,\n    locale: _propTypes[\"default\"].string,\n    buyerCountry: _propTypes[\"default\"].string,\n    debug: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string])\n  }),\n  onButtonReady: _propTypes[\"default\"].func\n});\n\n_defineProperty(PayPalButton, \"defaultProps\", {\n  style: {},\n  options: {\n    clientId: \"sb\",\n    currency: \"USD\"\n  },\n  shippingPreference: \"GET_FROM_FILE\"\n});\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/index.tsx"],"names":["PayPalButton","props","state","isSdkReady","window","undefined","paypal","addPaypalSdk","onButtonReady","data","actions","currency","options","amount","shippingPreference","order","create","purchase_units","currency_code","value","toString","application_context","shipping_preference","capture","then","details","onSuccess","err","catchError","createOrder","createSubscription","onApprove","style","Button","Buttons","driver","React","ReactDOM","createOrderFn","queryParams","Object","keys","forEach","k","name","split","join","toLowerCase","push","script","document","createElement","type","src","async","onload","setState","onerror","Error","body","appendChild","Component","PropTypes","oneOfType","number","string","func","onError","object","shape","clientId","merchantId","intent","commit","bool","vault","component","disableFunding","disableCard","integrationDate","locale","buyerCountry","debug"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\ndeclare global {\n    interface Window { paypal: any }\n}\n\nexport interface PayPalButtonProps {\n    amount?: number|string,\n    currency?: number|string,\n    shippingPreference?: \"NO_SHIPPING\" | \"GET_FROM_FILE\" | \"SET_PROVIDED_ADDRESS\",\n    onSuccess?: Function,\n    catchError?: Function,\n    onError?: Function,\n    createOrder?: Function,\n    createSubscription?: Function,\n    onApprove?: Function,\n    style?: object,\n    options?: PaypalOptions,\n    onButtonReady?: Function,\n}\n\nexport interface PayPalButtonState {\n    isSdkReady: boolean\n}\n\nexport interface PaypalOptions {\n    clientId?: string,\n    merchantId?: string,\n    currency?: number|string,\n    intent?: string,\n    commit?: boolean|string,\n    vault?: boolean|string,\n    component?: string,\n    disableFunding?: string,\n    disableCard?: string,\n    integrationDate?: string,\n    locale?: string,\n    buyerCountry?: string,\n    debug?: boolean|string\n}\n\nclass PayPalButton extends React.Component<PayPalButtonProps, PayPalButtonState> {\n    static propTypes = {\n        amount: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        currency: PropTypes.oneOfType([\n            PropTypes.number,\n            PropTypes.string,\n        ]),\n        shippingPreference: PropTypes.string,\n        onSuccess: PropTypes.func,\n        catchError: PropTypes.func,\n        onError: PropTypes.func,\n        createOrder: PropTypes.func,\n        createSubscription: PropTypes.func,\n        onApprove: PropTypes.func,\n        style: PropTypes.object,\n        options: PropTypes.shape({\n            clientId: PropTypes.string,\n            merchantId: PropTypes.string,\n            currency: PropTypes.oneOfType([\n                PropTypes.number,\n                PropTypes.string,\n            ]),\n            intent: PropTypes.string,\n            commit: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            vault: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ]),\n            component: PropTypes.string,\n            disableFunding: PropTypes.string,\n            disableCard: PropTypes.string,\n            integrationDate: PropTypes.string,\n            locale: PropTypes.string,\n            buyerCountry: PropTypes.string,\n            debug: PropTypes.oneOfType([\n                PropTypes.bool,\n                PropTypes.string\n            ])\n        }),\n        onButtonReady: PropTypes.func,\n    }\n\n    static defaultProps = {\n        style: {},\n        options: {\n            clientId: \"sb\",\n            currency: \"USD\"\n        },\n        shippingPreference: \"GET_FROM_FILE\",\n    }\n\n    constructor(props: PayPalButtonProps) {\n        super(props);\n\n        this.state = {\n            isSdkReady: false,\n        };\n    }\n\n    componentDidMount() {\n        if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal === undefined\n        ) {\n            this.addPaypalSdk();\n        }\n        else if (\n            typeof window !== \"undefined\" &&\n            window !== undefined &&\n            window.paypal !== undefined &&\n            this.props.onButtonReady\n        ) {\n            this.props.onButtonReady();\n        }\n    }\n\n    createOrder(data: any, actions: any) {\n\n        const { currency, options, amount, shippingPreference } = this.props;\n\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                currency_code: currency\n                  ? currency\n                  : options && options.currency\n                  ? options.currency\n                  : \"USD\",\n                value: amount.toString()\n              }\n            }\n          ],\n          application_context: {\n            shipping_preference: shippingPreference\n          }\n        });\n    }\n\n    onApprove(data: any, actions: any) {\n        return actions.order\n            .capture()\n            .then((details) => {\n                if (this.props.onSuccess) {\n                    return this.props.onSuccess(details, data);\n                }\n            })\n            .catch((err) => {\n                if (this.props.catchError) {\n                    return this.props.catchError(err);\n                }\n            });\n    }\n\n    render() {\n        const {\n            amount,\n            onSuccess,\n            createOrder,\n            createSubscription,\n            onApprove,\n            style,\n        } = this.props;\n        const { isSdkReady } = this.state;\n\n        if (\n            !isSdkReady &&\n            (typeof window === \"undefined\" || window.paypal === undefined)\n        ) {\n            return null;\n        }\n\n        const Button = window.paypal.Buttons.driver(\"react\", {\n            React,\n            ReactDOM,\n        });\n\n        const createOrderFn =\n            amount && !createOrder\n                ? (data: any, actions: any) => this.createOrder(data, actions)\n                : (data: any, actions: any) => createOrder(data, actions);\n\n        return (\n            <Button\n                {...this.props}\n                createOrder={createSubscription ? undefined : createOrderFn}\n                createSubscription={createSubscription}\n                onApprove={\n                    onSuccess\n                        ? (data: any, actions: any) => this.onApprove(data, actions)\n                        : (data: any, actions: any) => onApprove(data, actions)\n                }\n                style={style}\n            />\n        );\n    }\n\n    private addPaypalSdk() {\n        const { options, onButtonReady } = this.props;\n        const queryParams: string[] = [];\n\n        // replacing camelCase with dashes\n        Object.keys(options).forEach(k => {\n            const name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n            queryParams.push(`${name}=${options[k]}`);\n        });\n\n        const script = document.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.src = `https://www.paypal.com/sdk/js?${queryParams.join(\"&\")}`;\n        script.async = true;\n        script.onload = () => {\n            this.setState({ isSdkReady: true });\n\n            if (onButtonReady) {\n                onButtonReady();\n            }\n        };\n        script.onerror = () => {\n            throw new Error(\"Paypal SDK could not be loaded.\");\n        };\n    \n        document.body.appendChild(script);\n    }\n}\n\nexport { PayPalButton };\n"]}},"error":null,"hash":"5307a56202cb906c28ee71040194c546","cacheData":{"env":{}}}